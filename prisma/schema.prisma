generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          String  @id @default(uuid())
  name        String
  username    String  @unique
  email       String  @unique
  title       String
  password    String?
  image       String?
  description String  @default("") @db.Text()
  provider    String

  role     Role      @default(User)
  articles Article[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@index([username, email])
}

enum Role {
  Admin
  User
}

model Article {
  id       String   @id @default(uuid())
  slug     String   @unique
  title    String
  category String
  view     Int      @default(0)
  topics   String[]

  published Boolean
  status    Status  @default(Pending)

  userId   String
  author   User      @relation(fields: [userId], references: [id])
  sections Section[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@index([slug])
}

enum Status {
  Pending
  Confirmed
  Rejected
}

model Section {
  id        Int         @id @default(autoincrement())
  content   String      @db.Text()
  type      SectionType
  article   Article     @relation(fields: [articleId], references: [id], onDelete: Cascade)
  articleId String
}

enum SectionType {
  H1
  H2
  H3
  H4
  H5
  H6
  Text
  Image
  Quote
  List
  Number
}

model Information {
  id           String @id @default(uuid())
  heroTitle    String
  subtitleHero String
  imageHero    String

  greetTitle String
  greetText  String

  featureTitle String

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Feature {
  id       String @id @default(uuid())
  title    String
  subtitle String
  content  String
  image    String

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
